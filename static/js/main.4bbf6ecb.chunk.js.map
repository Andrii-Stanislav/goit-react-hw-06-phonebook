{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","styles/App.module.css","Components/ContactList/Contact/Contact.module.css","Components/Alert/Alert.module.css","redux/persistConfig.js","redux/contactsItems/contacts-actions.js","redux/contactsItems/contacts-reducer.js","redux/filter/filter-actions.js","redux/filter/filter-reducer.js","redux/store.js","Components/ContactForm/ContactForm.js","Components/ContactList/Contact/Contact.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","Components/Alert/Alert.js","App.js","index.js"],"names":["module","exports","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","contactsPersistConfig","key","storage","blacklist","createContact","createAction","deleteContact","contactsReducer","createReducer","state","payload","filter","contact","id","changeFilter","filterReducer","_","reducer","contacts","persistReducer","combineReducers","items","store","configureStore","devTools","process","persistor","persistStore","ContactForm","name","number","heandleInput","event","setState","currentTarget","value","createNewContact","preventDefault","verifyNewContact","props","onSubmit","uuidv4","newName","newNumber","verify","forEach","toLowerCase","showAlert","className","styles","form","this","label","input","type","placeholder","onChange","required","example","pattern","maxLength","button","Component","connect","dispatch","Contact","includes","deleteOnClick","e","target","title","TransitionGroup","appear","component","children","list","map","CSSTransition","classNames","timeout","item","onClick","container","Alert","text","alert","App","setTimeout","mainDiv","in","unmountOnExit","length","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.4bbf6ecb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__2IF4m\",\"label\":\"ContactForm_label__2mfXY\",\"input\":\"ContactForm_input__3dHde\",\"example\":\"ContactForm_example__15KCe\",\"button\":\"ContactForm_button__3oBpw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"ContactList_title__3t1iA\",\"list\":\"ContactList_list__2cE9S\",\"item\":\"ContactList_item__MbtlS\",\"button\":\"ContactList_button__3KnM2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1zC8G\",\"label\":\"Filter_label__19jWm\",\"input\":\"Filter_input__2CEsa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"App_mainDiv__3UoZL\",\"container\":\"App_container__1uyUS\",\"title\":\"App_title__21udz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Contact_contact__3wrT3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__fM2df\"};","import { getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nexport { persistStore, persistReducer, contactsPersistConfig, middleware };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const createContact = createAction('contacts/create');\nexport const deleteContact = createAction('contacts/delete');\n\n","import { createReducer } from '@reduxjs/toolkit';\nimport { createContact, deleteContact } from './contacts-actions';\n\nconst contactsReducer = createReducer([], {\n  [createContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) => [\n    ...state.filter(contact => contact.id !== payload),\n  ],\n});\n\nexport { contactsReducer };\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const changeFilter = createAction('filter/changed');\n","import { createReducer } from '@reduxjs/toolkit';\nimport { changeFilter } from './filter-actions';\n\nexport const filterReducer = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\n\nimport {\n  persistStore,\n  persistReducer,\n  contactsPersistConfig,\n  middleware,\n} from './persistConfig';\n\nimport { contactsReducer } from './contactsItems/contacts-reducer';\nimport { filterReducer } from './filter/filter-reducer';\n\nconst reducer = {\n  contacts: persistReducer(\n    contactsPersistConfig,\n    combineReducers({\n      items: contactsReducer,\n      filter: filterReducer,\n    }),\n  ),\n};\n\nconst store = configureStore({\n  reducer,\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { createContact } from '../../redux/contactsItems/contacts-actions';\n\nimport styles from './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  heandleInput = event => {\n    this.setState({ [event.currentTarget.name]: event.currentTarget.value });\n  };\n\n  createNewContact = event => {\n    event.preventDefault();\n\n    if (this.verifyNewContact(this.state)) {\n      this.props.onSubmit({ id: uuidv4(), ...this.state });\n    }\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  verifyNewContact = ({ name: newName, number: newNumber }) => {\n    let verify = true;\n    this.props.contacts.forEach(({ name, number }) => {\n      if (\n        name.toLowerCase() === newName.toLowerCase() ||\n        newNumber === number\n      ) {\n        this.props.showAlert();\n        verify = false;\n      }\n    });\n\n    return verify;\n  };\n\n  render() {\n    return (\n      <form className={styles.form} onSubmit={this.createNewContact}>\n        <label className={styles.label}>\n          Name:\n          <input\n            className={styles.input}\n            name=\"name\"\n            type=\"text\"\n            placeholder=\"Awesome name\"\n            value={this.state.name}\n            onChange={this.heandleInput}\n            required\n          />\n        </label>\n        <label className={styles.label}>\n          Phone <span className={styles.example}>(000-00-00)</span>:\n          <input\n            className={styles.input}\n            name=\"number\"\n            type=\"tel\"\n            pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n            maxLength=\"9\"\n            placeholder=\"Cool phonenumber\"\n            value={this.state.number}\n            onChange={this.heandleInput}\n            required\n          />\n        </label>\n        <button className={styles.button} type=\"submit\">\n          Create contact\n        </button>\n      </form>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts }) => ({\n  contacts: contacts.items,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: ({ id, name, number }) =>\n    dispatch(createContact({ id, name, number })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Contact.module.css';\n\nconst Contact = ({ name, number }) => {\n  return (\n    <div className={styles.contact}>\n      <span>{name}</span>\n      <span>{number}</span>\n    </div>\n  );\n};\n\nContact.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default Contact;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\n\nimport { deleteContact } from '../../redux/contactsItems/contacts-actions';\n\nimport Contact from './Contact';\n\nimport styles from './ContactList.module.css';\nimport '../../styles/animation.css';\n\nconst ContactList = ({ contacts, deleteOnClick }) => {\n  return (\n    <>\n      <h2 className={styles.title}>Contacts</h2>\n      <TransitionGroup\n        appear={false}\n        component=\"ul\"\n        children=\"li\"\n        className={styles.list}\n      >\n        {contacts.map(({ id, name, number }) => (\n          <CSSTransition key={id} classNames=\"contacts\" timeout={250}>\n            <li className={styles.item}>\n              <Contact name={name} number={number} />\n              <button className={styles.button} id={id} onClick={deleteOnClick}>\n                Delete\n              </button>\n            </li>\n          </CSSTransition>\n        ))}\n      </TransitionGroup>\n    </>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteOnClick: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: items.filter(\n    ({ name }) => name && name.toLowerCase().includes(filter.toLowerCase()),\n  ),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  deleteOnClick: e => dispatch(deleteContact(e.target.id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { changeFilter } from '../../redux/filter/filter-actions';\n\nimport styles from './Filter.module.css';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <div className={styles.container}>\n      <label className={styles.label}>\n        Filter:\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = ({ contacts }) => ({\n  value: contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\n\nimport styles from './Alert.module.css';\n\nconst Alert = ({ text }) => {\n  return <div className={styles.alert}>{text}</div>;\n};\n\nexport default Alert;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport ContactForm from './Components/ContactForm';\nimport ContactList from './Components/ContactList';\nimport Filter from './Components/Filter';\nimport Alert from './Components/Alert';\n\nimport { CSSTransition } from 'react-transition-group';\n\nimport styles from './styles/App.module.css';\nimport './styles/animation.css';\nimport './styles/index.css';\n\nclass App extends Component {\n  state = {\n    alert: false,\n  };\n\n  showAlert = () => {\n    this.setState({ alert: true });\n    setTimeout(() => this.setState({ alert: false }), 2000);\n  };\n\n  render() {\n    const { contacts } = this.props;\n    const { alert } = this.state;\n\n    return (\n      <div className={styles.mainDiv}>\n        <div className={styles.container}>\n          <CSSTransition\n            in={true}\n            appear={true}\n            timeout={250}\n            classNames=\"title\"\n            unmountOnExit\n          >\n            <h1 className={styles.title}>Phonebook</h1>\n          </CSSTransition>\n          <ContactForm showAlert={this.showAlert} />\n          <CSSTransition\n            in={contacts.length > 1}\n            appear={true}\n            timeout={250}\n            classNames=\"fade\"\n            unmountOnExit\n          >\n            <Filter />\n          </CSSTransition>\n          <ContactList />\n          <CSSTransition\n            in={alert}\n            appear={true}\n            timeout={250}\n            classNames=\"fade\"\n            unmountOnExit\n          >\n            <Alert text=\"Contact is already exist\" />\n          </CSSTransition>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = ({ contacts: { items } }) => ({\n  contacts: items,\n});\n\nexport default connect(mapStateToProps, null)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { store, persistor } from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}